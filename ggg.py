import telebot
from telebot.types import ChatMemberUpdated, ChatMember
import logging
from collections import defaultdict

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7862694945:AAEm9g5gUa5Mrhe8L-Jszst_pDBeBWtYicc"
MAX_KICKS_BEFORE_BAN = 3  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —É–¥–∞–ª–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –±–∞–Ω–æ–º
ADMIN_USER_IDS = [7734536630,8074015868]  # –í–∞—à ID –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º
LOG_CHAT_ID = -100123456789  # –ß–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

bot = telebot.TeleBot(TOKEN, parse_mode="HTML")
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ë–î)
channels = {}  # {channel_id: {"title": str, "admin_chat": int, "admins": {admin_id: int}}}

def is_bot_admin(chat_id):
    try:
        member = bot.get_chat_member(chat_id, bot.get_me().id)
        return member.status == "administrator" and member.can_restrict_members
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞: {e}")
        return False

@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id not in ADMIN_USER_IDS:
        return
    
    bot.reply_to(message, 
        "üëÆ‚Äç‚ôÇÔ∏è <b>–ë–æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤</b>\n\n"
        "–Ø –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–æ–≤ –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–Ω–∏–º–∞—é —Ç–µ—Ö, –∫—Ç–æ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç –ø—Ä–∞–≤–∞–º–∏.\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/add_channel - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        "/set_notify - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "/check_bot - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –±–æ—Ç–∞\n"
        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏–π\n"
        "/help - —Å–ø—Ä–∞–≤–∫–∞"
    )

@bot.message_handler(commands=['add_channel'])
def add_channel(message):
    if message.from_user.id not in ADMIN_USER_IDS:
        return
    
    if message.forward_from_chat and message.forward_from_chat.type == "channel":
        channel = message.forward_from_chat
        if not is_bot_admin(channel.id):
            bot.reply_to(message, 
                "‚ùå –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±–∞–Ω! "
                "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–æ–º <code>ban users</code>."
            )
            return
            
        channels[channel.id] = {
            "title": channel.title,
            "admin_chat": None,
            "admins": defaultdict(int)
        }
        bot.reply_to(message, f"‚úÖ –ö–∞–Ω–∞–ª <b>{channel.title}</b> –¥–æ–±–∞–≤–ª–µ–Ω. –¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
    else:
        bot.reply_to(message, "‚ùó <b>–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b> –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ ID.")

@bot.message_handler(commands=['set_notify'])
def set_notify_chat(message):
    if message.from_user.id not in ADMIN_USER_IDS:
        return
    
    if message.forward_from_chat:
        chat = message.forward_from_chat
        for channel_id in channels:
            channels[channel_id]["admin_chat"] = chat.id
        bot.reply_to(message, f"‚úÖ –ß–∞—Ç <b>{chat.title}</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
    else:
        bot.reply_to(message, "‚ùó <b>–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞</b> –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")

@bot.message_handler(commands=['check_bot'])
def check_bot_rights(message):
    if message.from_user.id not in ADMIN_USER_IDS:
        return
    
    try:
        chat_id = message.chat.id
        bot_member = bot.get_chat_member(chat_id, bot.get_me().id)
        
        if bot_member.status != "administrator":
            bot.reply_to(message, "‚ùå –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
            return
            
        required_rights = {
            "can_restrict_members": "–ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "can_post_messages": "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
            "can_delete_messages": "–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"
        }
        
        missing = [desc for right, desc in required_rights.items() if not getattr(bot_member, right, False)]
        
        if missing:
            bot.reply_to(message, f"‚ö† <b>–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤:</b>\n" + "\n".join(missing))
        else:
            bot.reply_to(message, "‚úÖ <b>–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –µ—Å—Ç—å!</b>")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤: {e}")
        bot.reply_to(message, f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {e}")

def ban_admin(channel_id, admin_id, reason):
    try:
        # –°–Ω–∞—á–∞–ª–∞ —Å–Ω–∏–º–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
        bot.promote_chat_member(
            channel_id,
            admin_id,
            can_change_info=False,
            can_post_messages=False,
            can_edit_messages=False,
            can_delete_messages=False,
            can_invite_users=False,
            can_restrict_members=False,
            can_pin_messages=False,
            can_promote_members=False
        )
        
        # –ó–∞—Ç–µ–º –±–∞–Ω–∏–º
        bot.ban_chat_member(channel_id, admin_id)
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –∫–∞–Ω–∞–ª–∞
        if channel_id in channels and admin_id in channels[channel_id]["admins"]:
            del channels[channel_id]["admins"][admin_id]
            
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –±–∞–Ω–∞ –∞–¥–º–∏–Ω–∞ {admin_id}: {e}")
        if LOG_CHAT_ID:
            bot.send_message(
                LOG_CHAT_ID,
                f"üö® <b>–û—à–∏–±–∫–∞ –±–∞–Ω–∞ –∞–¥–º–∏–Ω–∞</b>\n"
                f"–ö–∞–Ω–∞–ª: {channel_id}\n"
                f"–ê–¥–º–∏–Ω: {admin_id}\n"
                f"–û—à–∏–±–∫–∞: {e}"
            )
        return False

@bot.chat_member_handler()
def handle_chat_member(update: ChatMemberUpdated):
    try:
        channel_id = update.chat.id
        if channel_id not in channels:
            return
            
        old_status = update.old_chat_member.status
        new_status = update.new_chat_member.status
        
        # –§–∏–∫—Å–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∏–∫–∏ (–Ω–µ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–µ –≤—ã—Ö–æ–¥—ã)
        if old_status in ["member", "administrator"] and new_status == "kicked":
            admin = update.from_user
            user = update.new_chat_member.user
            
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ—É–¥–∞–ª–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤
            if admin.id == user.id or admin.is_bot:
                return
                
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
            channels[channel_id]["admins"][admin.id] += 1
            count = channels[channel_id]["admins"][admin.id]
            
            logger.info(f"–ê–¥–º–∏–Ω {admin.id} —É–¥–∞–ª–∏–ª {user.id} –≤ {channel_id} (–í—Å–µ–≥–æ: {count})")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            notify_chat = channels[channel_id]["admin_chat"]
            if notify_chat:
                try:
                    bot.send_message(
                        notify_chat,
                        f"üö® <b>–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ —É–¥–∞–ª–µ–Ω–∏–µ</b>\n"
                        f"–ö–∞–Ω–∞–ª: {update.chat.title}\n"
                        f"–ê–¥–º–∏–Ω: {admin.mention} (ID: {admin.id})\n"
                        f"–£–¥–∞–ª—ë–Ω: {user.mention} (ID: {user.id})\n"
                        f"–í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–π: {count}/{MAX_KICKS_BEFORE_BAN}",
                        disable_web_page_preview=True
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            
            # –ë–∞–Ω –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
            if count >= MAX_KICKS_BEFORE_BAN:
                if ban_admin(channel_id, admin.id, "–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∏–π"):
                    if notify_chat:
                        bot.send_message(
                            notify_chat,
                            f"‚õî <b>–ê–¥–º–∏–Ω {admin.mention} –±—ã–ª —Å–Ω—è—Ç –∏ –∑–∞–±–∞–Ω–µ–Ω!</b>\n"
                            f"–ü—Ä–∏—á–∏–Ω–∞: —É–¥–∞–ª–µ–Ω–∏–µ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                            disable_web_page_preview=True
                        )
                    logger.warning(f"–ê–¥–º–∏–Ω {admin.id} —Å–Ω—è—Ç –∏ –∑–∞–±–∞–Ω–µ–Ω –≤ {channel_id}")
                else:
                    if notify_chat:
                        bot.send_message(
                            notify_chat,
                            f"‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞ {admin.mention}!</b>\n"
                            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.",
                            disable_web_page_preview=True
                        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        if LOG_CHAT_ID:
            bot.send_message(LOG_CHAT_ID, f"üö® –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['stats'])
def show_stats(message):
    if message.from_user.id not in ADMIN_USER_IDS:
        return
    
    if not channels:
        bot.reply_to(message, "–ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        return
        
    stats = ["üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏–π</b>"]
    for channel_id, data in channels.items():
        stats.append(f"\nüîπ <b>{data.get('title', channel_id)}</b>")
        if not data["admins"]:
            stats.append("–ù–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∏–π")
            continue
            
        for admin_id, count in data["admins"].items():
            try:
                admin = bot.get_chat_member(channel_id, admin_id).user
                name = admin.mention if admin else f"ID:{admin_id}"
            except:
                name = f"ID:{admin_id}"
            stats.append(f"üë§ {name}: {count} —É–¥–∞–ª–µ–Ω–∏–π")
    
    bot.reply_to(message, "\n".join(stats), disable_web_page_preview=True)

@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = (
        "üÜò <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –∫–æ–Ω—Ç—Ä–æ–ª—è –∞–¥–º–∏–Ω–æ–≤</b>\n\n"
        "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ <b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b> (—Å –ø—Ä–∞–≤–æ–º –±–∞–Ω–∞)\n"
        "2. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π <code>/add_channel</code>\n"
        "3. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å <code>/set_notify</code>\n"
        "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π <code>/check_bot</code>\n\n"
        f"<b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω:</b> –ø—Ä–∏ {MAX_KICKS_BEFORE_BAN}+ —É–¥–∞–ª–µ–Ω–∏—è—Ö\n"
        "<b>–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:</b> –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ bot.log"
    )
    bot.reply_to(message, help_text, disable_web_page_preview=True)

if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    bot.infinity_polling(allowed_updates=["message", "chat_member"])